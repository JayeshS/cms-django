# -*- coding: utf-8 -*-
# Generated by Django 1.11.18 on 2019-01-22 10:06
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('start_time', models.TimeField(null=True)),
                ('end_date', models.DateField()),
                ('end_time', models.TimeField(null=True)),
                ('picture', models.ImageField(blank=True, null=True, upload_to='events/%Y/%m/%d')),
            ],
        ),
        migrations.CreateModel(
            name='EventTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('draft', 'Entwurf'), ('in-review', 'Ausstehender Review'), ('reviewed', 'Review abgeschlossen')], default='draft', max_length=9)),
                ('title', models.CharField(max_length=250)),
                ('description', models.TextField()),
                ('permalink', models.CharField(max_length=60)),
                ('version', models.PositiveIntegerField(default=0)),
                ('minor_edit', models.BooleanField(default=False)),
                ('public', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_translations', to='cms.Event')),
            ],
        ),
        migrations.CreateModel(
            name='Extra',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExtraTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('alias', models.CharField(max_length=60)),
                ('thumbnail', models.CharField(max_length=250)),
                ('url', models.CharField(max_length=250)),
                ('post_data', django.contrib.postgres.fields.jsonb.JSONField(max_length=250, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('code', models.CharField(max_length=2, primary_key=True, serialize=False, validators=[django.core.validators.MinLengthValidator(2)])),
                ('title', models.CharField(max_length=250)),
                ('text_direction', models.CharField(choices=[('ltr', 'left-to-right'), ('rtl', 'right-to-left')], max_length=3)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=0)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='pages/%Y/%m/%d')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='cms.Page')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PageTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permalink', models.CharField(max_length=60)),
                ('title', models.CharField(max_length=250)),
                ('status', models.CharField(choices=[('draft', 'Entwurf'), ('in-review', 'Ausstehender Review'), ('reviewed', 'Review abgeschlossen')], default='draft', max_length=9)),
                ('text', models.TextField()),
                ('version', models.PositiveIntegerField(default=0)),
                ('public', models.BooleanField(default=False)),
                ('minor_edit', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.Language')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='page_translations', to='cms.Page')),
            ],
        ),
        migrations.CreateModel(
            name='POI',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=250)),
                ('postcode', models.CharField(max_length=10)),
                ('city', models.CharField(max_length=250)),
                ('region', models.CharField(max_length=250)),
                ('country', models.CharField(max_length=250)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='POITranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('permalink', models.CharField(max_length=60)),
                ('status', models.CharField(choices=[('draft', 'Entwurf'), ('in-review', 'Ausstehender Review'), ('reviewed', 'Review abgeschlossen')], default='draft', max_length=9)),
                ('description', models.TextField()),
                ('version', models.PositiveIntegerField(default=0)),
                ('minor_edit', models.BooleanField(default=False)),
                ('public', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.Language')),
                ('poi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='poi_translations', to='cms.POI')),
            ],
        ),
        migrations.CreateModel(
            name='PushNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel', models.CharField(max_length=60)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PushNotificationTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('text', models.CharField(max_length=250)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.Language')),
                ('push_notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.PushNotification')),
            ],
        ),
        migrations.CreateModel(
            name='RecurrenceRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frequency', models.CharField(choices=[('DAILY', 'Täglich'), ('WEEKLY', 'Wöchentlich'), ('MONTHLY', 'Monatlich'), ('YEARLY', 'Jährlich')], max_length=7)),
                ('interval', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('weekdays_for_weekly', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(6)]), null=True, size=None)),
                ('weekday_for_monthly', models.IntegerField(null=True)),
                ('week_for_monthly', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(-5), django.core.validators.MaxValueValidator(5)])),
                ('end_date', models.DateField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('name', models.URLField(max_length=60, unique=True)),
                ('status', models.CharField(choices=[('acti', 'Active'), ('hidd', 'Hidden'), ('arch', 'Archived')], max_length=4)),
                ('events_enabled', models.BooleanField(default=True)),
                ('push_notifications_enabled', models.BooleanField(default=True)),
                ('push_notification_channels', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=60), size=None)),
                ('latitude', models.FloatField(blank=True)),
                ('longitude', models.FloatField(blank=True)),
                ('postal_code', models.CharField(max_length=10)),
                ('admin_mail', models.EmailField(max_length=254)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('supported_languages', models.ManyToManyField(to='cms.Language')),
            ],
        ),
        migrations.CreateModel(
            name='PostalCodeInGetParameterExtra',
            fields=[
                ('extra_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cms.Extra')),
            ],
            bases=('cms.extra',),
        ),
        migrations.CreateModel(
            name='PostalCodeInPostParameterExtra',
            fields=[
                ('extra_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cms.Extra')),
            ],
            bases=('cms.extra',),
        ),
        migrations.AddField(
            model_name='pushnotification',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.Site'),
        ),
        migrations.AddField(
            model_name='poi',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.Site'),
        ),
        migrations.AddField(
            model_name='page',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.Site'),
        ),
        migrations.AddField(
            model_name='extra',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.Site'),
        ),
        migrations.AddField(
            model_name='extra',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.ExtraTemplate'),
        ),
        migrations.AddField(
            model_name='eventtranslation',
            name='language',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.Language'),
        ),
        migrations.AddField(
            model_name='event',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='cms.POI'),
        ),
        migrations.AddField(
            model_name='event',
            name='recurrence_rule',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='cms.RecurrenceRule'),
        ),
        migrations.AddField(
            model_name='event',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.Site'),
        ),
    ]
